name: testWindows

on:
  push:
    branches:
      - '**'     # Run on all branches
    tags-ignore:
      - 'v*'     # Ignore tag pushes matching 'v*'
  pull_request:
    branches:
      - '**'     # Run for all pull requests

env:
  BUILD_TYPE: Release

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
    runs-on: windows-2025

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install hdf5
        run: |
          vcpkg install hdf5 --triplet x64-windows
          vcpkg integrate install
          echo "$env:VCPKG_INSTALLATION_ROOT\installed\x64-windows\bin" >> $GITHUB_PATH
        shell: powershell

      - name: Prepare Vulkan SDK
        uses: humbletim/install-vulkan-sdk@c2aa128094d42ba02959a660f03e0a4e012192f9
        with:
          version: 1.3.275.0
          cache: true

      - name: Download glslangValidator
        run: curl -L -o glslang.zip https://github.com/KhronosGroup/glslang/releases/download/main-tot/glslang-master-windows-Release.zip

      - name: Extract glslangValidator
        shell: powershell
        run: Expand-Archive -Path glslang.zip -DestinationPath ${{github.workspace}}/glslang

      - name: Add glslangValidator to PATH
        run: echo "${{github.workspace}}/glslang/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Setup CUDA Toolkit
        id: cuda-toolkit
        shell: pwsh
        run: .\Scripts\setup-cuda.ps1
        env:
          INPUT_CUDA_VERSION: 12.5.1

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DRAYX_WERROR=ON -DRAYX_REQUIRE_CUDA=ON -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: |
          type "${{github.workspace}}/build/CMakeCache.txt"
          echo "D:\a\rayx\rayx\vcpkg\installed\x64-windows\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run
        working-directory: ${{github.workspace}}
        run: |
          $Env:RML="Intern/rayx-core/tests/input/METRIX_U41_G1_H1_318eV_PS_MLearn_v114.rml"
          ./build/bin/release/rayx -x -c -V -i $Env:RML
          ./build/bin/release/rayx -x    -V -i $Env:RML

      - name: Test
        working-directory: ${{github.workspace}}/build/bin/release
        run: ./rayx-core-tst -x

      - name: CPack
        run: |
          cd ${{github.workspace}}/build
          cpack -G ZIP

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RAYX
          path: ${{github.workspace}}/build/RAYX-*.*.*-win64.zip
